{
  "openapi": "3.0.3",
  "info": {
    "title": "Foodi Product Service",
    "version": "1.0.0",
    "description": ""
  },
  "servers": [
    {
      "url": "http://localhost:3347",
      "description": "Local"
    },
    {
      "url": "http://192.168.169.63:6012",
      "description": "Dev"
    },
    {
      "url": "http://192.168.169.71:6012",
      "description": "Stage"
    }
  ],
  "paths": {
    "/upload-file": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload image",
        "description": "Upload only JPEG, PNG and image size less then equal 5MB.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/multiple-upload-file": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Multiple Upload file",
        "description": "Multiple Upload only JPEG, PNG and image size less then equal 100MB.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MultipleUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleUploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/uploads": {
      "get": {
        "tags": [
          "Files"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get files options with paginate",
        "description": "Get files with options paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "schema": {
              "type": "number",
              "description": "A search query files by userID",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "ratio",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query files by ratio",
              "example": "16:9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFilesOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/uom": {
      "post": {
        "tags": [
          "Unit Of Measurements"
        ],
        "summary": "Create UOM",
        "description": "Create UOM",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UOMRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOMResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Unit Of Measurements"
        ],
        "summary": "Get UOM with paginate",
        "description": "Get UOM with paginate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter UOMs by name or symbol",
              "example": "kg"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query uom by isActive",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUOMResponse"
                }
              }
            }
          }
        }
      }
    },
    "/uom/{id}": {
      "get": {
        "tags": [
          "Unit Of Measurements"
        ],
        "summary": "Get UOM details",
        "description": "Fetch a single UOM based on the provided ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the UOM to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOMResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Unit Of Measurements"
        ],
        "summary": "Update UOM",
        "description": "Update UOM",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the UOM to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UOMRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOMResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Unit Of Measurements"
        ],
        "summary": "Active/Inactive update UOM",
        "description": "Active/Inactive update UOM",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the UOM to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOMResponse"
                }
              }
            }
          }
        }
      }
    },
    "/uom/options": {
      "get": {
        "tags": [
          "Unit Of Measurements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get UOM options with paginate",
        "description": "Get UOM options with paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter UOM by name",
              "example": "kilogram"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUOMOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands": {
      "post": {
        "tags": [
          "Brands"
        ],
        "summary": "Create Brand",
        "description": "Create Brand",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Brands"
        ],
        "summary": "Get brand with paginate",
        "description": "Get brand with paginate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter UOMs by name or symbol",
              "example": "Apex"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query uom by isActive",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBrandResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{id}": {
      "get": {
        "tags": [
          "Brands"
        ],
        "summary": "Get Brand details",
        "description": "Fetch a single brand based on the provided ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the brand to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Brands"
        ],
        "summary": "Update Brand",
        "description": "Update Brand",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the brand to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Brands"
        ],
        "summary": "Active/Inactive update Brand",
        "description": "Active/Inactive update Brand",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the Brand to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands/options": {
      "get": {
        "tags": [
          "Brands"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get brands options with paginate",
        "description": "Get brands options with paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter brands by name or symbol",
              "example": "Apex"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBrandOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/tree-by-tags/{shopId}": {
      "get": {
        "tags": ["Categories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get category tree filtered by tag IDs",
        "description": "Get category tree filtered by tag IDs",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "description": "ID of the root category",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagIds[]",
            "in": "query",
            "required": false,
            "description": "List of tag IDs to filter categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryTree"
                }
              }
            }
          }
        }
      }

    },
    "/categories/{shopId}/{categoryId}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update Category",
        "description": "Update Category By ShopId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "description": "The unique identifier for the shopId to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "description": "The unique identifier for the categoryId to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleCategoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCategoryUpdateResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Categories"
        ],
        "summary": "Active/Inactive update Category",
        "description": "Active/Inactive update Category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "description": "The unique identifier for the shopId to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "description": "The unique identifier for the categoryId to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsActiveCategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{shopId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category By ShopId",
        "description": "Get Category By ShopId for User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "description": "The ID of the shop",
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryUserResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Add categories for a shop",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "description": "The ID of the shop",
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/cms/{shopId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category By ShopId",
        "description": "Only for CMS Users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "description": "The ID of the shop",
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/by-id/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category By Id",
        "description": "Only for CMS Users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the category",
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryFlatResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/options/by-shop/{shopId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get Category options By shop id",
        "description": "Only for CMS Users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "description": "The shop id of the category",
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCategoryOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attributes": {
      "post": {
        "tags": [
          "Attributes"
        ],
        "summary": "Create attribute",
        "description": "Create attribute",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Attributes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get attribute with paginate",
        "description": "Get attribute with paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter UOMs by name or symbol",
              "example": "kg"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query uom by isActive",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAttributesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attributes/options": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get attribute options with paginate",
        "description": "Get attribute options with paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query uom by isActive",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAttributeOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attributes/{attributeId}/value-options": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get attribute options with paginate",
        "description": "Get attribute options with paginate",
        "parameters": [
          {
            "in": "path",
            "name": "attributeId",
            "required": true,
            "description": "The unique identifier for the attribute to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter attribute value by name or symbol",
              "example": "tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAttributeValueOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/attributes/{id}": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get attribute details",
        "description": "Fetch a single attribute based on the provided ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the attribute to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attributes"
        ],
        "summary": "Update Attribute",
        "description": "Update attribute",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the attribute to update",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attribute"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Attributes"
        ],
        "summary": "Active/Inactive update attribute",
        "description": "Active/Inactive update attribute",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the attribute to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get tags with paginate",
        "description": "Get tags with paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter tags by name or symbol",
              "example": "tag"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query tags by isActive",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "isVertical",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query tags by isVertical",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTagsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Create Tags",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags/names/by-ids": {
      "get": {
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get tag by tag ids",
        "description": "Get tags by tag ids",
        "parameters": [
          {
            "in": "query",
            "name": "tagIds[]",
            "required": false,
            "description": "a query param for tag ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "1"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get tag by tag id",
        "description": "Get tags by tag id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the tag to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update Tag",
        "description": "Update Tag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the Tag to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tags"
        ],
        "summary": "Active/Inactive update Tag",
        "description": "Active/Inactive update Tag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the tag to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags/all": {
      "get": {
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all tags",
        "description": "Get all tags",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags/options": {
      "get": {
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get tags options with paginate",
        "description": "Get tags with options paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter tags by name or symbol",
              "example": "tag"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query tag by isActive",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "isVertical",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query to filter tags by isVertical",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTagsOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["Products"],
        "summary": "Create product for one or more branches",
        "description": "Creates separate product entries for each branch specified",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products with paginate",
        "description": "Get filtered and paginated Products",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            },
            "required": false,
            "description": "The page number to retrieve"
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            },
            "required": false,
            "description": "The number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "example": "Mangoe"
            },
            "required": false,
            "description": "A search query to filter options"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            },
            "required": false,
            "description": "Sort order for the results"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "created_at"
            },
            "required": false,
            "description": "Field to sort the results by"
          },
          {
            "in": "query",
            "name": "ids[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by product IDs"
          },
          {
            "in": "query",
            "name": "shopId",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": false,
            "description": "Filter by shop ID"
          },
          {
            "in": "query",
            "name": "groupIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by group IDs"
          },
          {
            "in": "query",
            "name": "branchIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by branch IDs"
          },
          {
            "in": "query",
            "name": "tagIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by tag IDs"
          },
          {
            "in": "query",
            "name": "isDelivery",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by isDelivery flag"
          },
          {
            "in": "query",
            "name": "isPickup",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": false,
            "description": "Filter by isPickup flag"
          },
          {
            "in": "query",
            "name": "isPerishable",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": false,
            "description": "Filter by perishable flag"
          },
          {
            "in": "query",
            "name": "allowInstruction",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by allowInstruction flag"
          },
          {
            "in": "query",
            "name": "promiseIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by promise IDs"
          },
          {
            "in": "query",
            "name": "attrIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by attribute IDs"
          },
          {
            "in": "query",
            "name": "attrValueIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by attribute value IDs"
          },
          {
            "in": "query",
            "name": "variationAttrIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by variation attribute IDs"
          },
          {
            "in": "query",
            "name": "variationAttrValueIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by variation attribute value IDs"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by isActive flag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProductsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get product by ID",
        "description": "Returns detailed information about a specific product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to retrieve",
            "required": true,
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products/group-options": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get options with paginate",
        "description": "Get filtered and paginated options",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            },
            "required": false,
            "description": "The page number to retrieve"
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            },
            "required": false,
            "description": "The number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "example": "Mangoe"
            },
            "required": false,
            "description": "A search query to filter options"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            },
            "required": false,
            "description": "Sort order for the results"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "created_at"
            },
            "required": false,
            "description": "Field to sort the results by"
          },
          {
            "in": "query",
            "name": "ids[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by product IDs"
          },
          {
            "in": "query",
            "name": "shopId",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": false,
            "description": "Filter by shop ID"
          },
          {
            "in": "query",
            "name": "groupIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by group IDs"
          },
          {
            "in": "query",
            "name": "branchIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by branch IDs"
          },
          {
            "in": "query",
            "name": "tagIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by tag IDs"
          },
          {
            "in": "query",
            "name": "isDelivery",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by isDelivery flag"
          },
          {
            "in": "query",
            "name": "isPickup",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": false,
            "description": "Filter by isPickup flag"
          },
          {
            "in": "query",
            "name": "isPerishable",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": false,
            "description": "Filter by perishable flag"
          },
          {
            "in": "query",
            "name": "allowInstruction",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by allowInstruction flag"
          },
          {
            "in": "query",
            "name": "promiseIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by promise IDs"
          },
          {
            "in": "query",
            "name": "attrIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by attribute IDs"
          },
          {
            "in": "query",
            "name": "attrValueIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by attribute value IDs"
          },
          {
            "in": "query",
            "name": "variationAttrIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by variation attribute IDs"
          },
          {
            "in": "query",
            "name": "variationAttrValueIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by variation attribute value IDs"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by isActive flag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProductOptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/options": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get options with paginate",
        "description": "Get filtered and paginated options",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            },
            "required": false,
            "description": "The page number to retrieve"
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            },
            "required": false,
            "description": "The number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string",
              "example": "Mangoe"
            },
            "required": false,
            "description": "A search query to filter options"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            },
            "required": false,
            "description": "Sort order for the results"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "created_at"
            },
            "required": false,
            "description": "Field to sort the results by"
          },
          {
            "in": "query",
            "name": "ids[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by product IDs"
          },
          {
            "in": "query",
            "name": "shopId",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": false,
            "description": "Filter by shop ID"
          },
          {
            "in": "query",
            "name": "groupIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by group IDs"
          },
          {
            "in": "query",
            "name": "branchIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by branch IDs"
          },
          {
            "in": "query",
            "name": "tagIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by tag IDs"
          },
          {
            "in": "query",
            "name": "isDelivery",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by isDelivery flag"
          },
          {
            "in": "query",
            "name": "isPickup",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": false,
            "description": "Filter by isPickup flag"
          },
          {
            "in": "query",
            "name": "isPerishable",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": false,
            "description": "Filter by perishable flag"
          },
          {
            "in": "query",
            "name": "allowInstruction",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by allowInstruction flag"
          },
          {
            "in": "query",
            "name": "promiseIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by promise IDs"
          },
          {
            "in": "query",
            "name": "attrIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by attribute IDs"
          },
          {
            "in": "query",
            "name": "attrValueIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by attribute value IDs"
          },
          {
            "in": "query",
            "name": "variationAttrIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by variation attribute IDs"
          },
          {
            "in": "query",
            "name": "variationAttrValueIds[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "Filter by variation attribute value IDs"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "description": "Filter by isActive flag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedProductOptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/variations": {
      "get": {
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get product variations",
        "description": "Returns all variations for a specific product including attribute information",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product to retrieve variations for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}/status": {
      "patch": {
        "tags": ["Products"],
        "summary": "Update product status",
        "description": "Update product status",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 123
            }
          }
        ],
        "requestBody": {
          "description": "Product status update data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStatusRequest"
              },
              "example": {
                "isActive": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/stock-exists": {
      "post": {
        "tags": ["Products"],
        "summary": "Check if stock exists for given SKUs and branch IDs",
        "description": "Check if stock exists for given SKUs and branch IDs",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockExistsRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "skus": [
                      "Y7YMG1-PROD",
                      "Y7YMG1-PROD-0001",
                      "Y7YMG1-PROD-0002"
                    ],
                    "branchIds": [1, 2, 3]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockExistsResponse"
                },
                "examples": {
                  "default": {
                    "value": {
                      "status": true,
                      "message": "Success",
                      "data": {
                        "stockExists": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/gen-sku": {
      "post": {
        "tags": ["Products"],
        "summary": "Generate Product SKU",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Generates a unique SKU code based on the product name",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSkuRequest"
              },
              "example": {
                "name": "mango"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful SKU generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSkuResponse"
                },
                "example": {
                  "data": {
                    "sku": "I36JVC-COC"
                  },
                  "message": "Success",
                  "status": true
                }
              }
            }
          }
        }
      }
    },
    "/promises": {
      "get": {
        "tags": [
          "Promises"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get promises with paginate",
        "description": "Get promises with paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter promises by short title and short description",
              "example": "shipping"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPromiseResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Promises"
        ],
        "summary": "Create Promises",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromiseBatchReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPromiseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promises/list-by-ids": {
      "get": {
        "tags": [
          "Promises"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get promise by promise ids",
        "description": "Get promise by promise ids",
        "parameters": [
          {
            "in": "query",
            "name": "ids[]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "1"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPromiseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promises/options": {
      "get": {
        "tags": [
          "Promises"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get promises options with paginate",
        "description": "Get promises options with paginate",
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter promises by short title and short description",
              "example": "shipping"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPromiseOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promises/{id}": {
      "get": {
        "tags": [
          "Promises"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get promise by promise id",
        "description": "Get promise by promise id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the promise to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromiseResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Promises"
        ],
        "summary": "Update Promise",
        "description": "Update Promise",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the promise to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromiseUpdateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromiseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promises/{id}/status": {
      "patch": {
        "tags": [
          "Promises"
        ],
        "summary": "Active/Inactive update Promise",
        "description": "Active/Inactive update Promise",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the shop promotion to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromiseIsActiveParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromiseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shop-promotions": {
      "post": {
        "tags": [
          "Shop Promotions"
        ],
        "summary": "Create Shop Promotion",
        "description": "Create Shop Promotion",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPromotionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPromotionResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Shop Promotions"
        ],
        "summary": "Get shop promotion with paginate",
        "description": "Get shop promotion with paginate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter shop promotions by name or symbol",
              "example": "Apex"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          },
          {
            "in": "query",
            "name": "isActive",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "A search query shop promotion by isActive",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "promotionType",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by promotion type.",
              "example": "category"
            }
          },
          {
            "in": "query",
            "name": "shopId",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by shop id.",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "visibleAfter",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible after.",
              "example": "2025-04-01T00:00:00.000Z"
            }
          },
          {
            "in": "query",
            "name": "visibleUpto",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible up to.",
              "example": "2025-04-01T00:00:00.000Z"
            }
          },
          {
            "in": "query",
            "name": "categoryIds[]",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by category ids.",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "branchIds[]",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible up to.",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "productIds[]",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible up to.",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "productTagIds[]",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible up to.",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "categoryTagIds[]",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible up to.",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "brandIds[]",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible up to.",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "navigableTagIds[]",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query shop promotion by visible up to.",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedShopPromotionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shop-promotions/{id}": {
      "get": {
        "tags": [
          "Shop Promotions"
        ],
        "summary": "Get Shop Promotion details",
        "description": "Fetch a single Shop Promotion based on the provided ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the Shop Promotion to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPromotionResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shop Promotions"
        ],
        "summary": "Update Shop Promotion",
        "description": "Update Shop Promotion",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the shop promotion to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPromotionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPromotionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Shop Promotions"
        ],
        "summary": "Active/Inactive update Shop Promotion",
        "description": "Active/Inactive update Shop Promotion",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the shop promotion to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPromotionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shop-promotions/types": {
      "get": {
        "tags": ["Shop Promotions"],
        "summary": "Get available promotion types",
        "description": "Returns a list of all valid promotion types that can be used for shop promotions",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionTypesResponse"
                },
                "example": {
                  "status": true,
                  "message": "Success",
                  "data": [
                    "brand",
                    "category",
                    "product",
                    "product_tag",
                    "category_offer",
                    "product_offer",
                    "category_tag",
                    "promotion_group"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/info-sections": {
      "post": {
        "tags": [
          "Informative  Sections"
        ],
        "summary": "Create informative sections",
        "description": "Create informative sections",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInfoSectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoSectionResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Informative  Sections"
        ],
        "summary": "Get informative section paginated",
        "description": "Get informative section paginated",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter info section by title",
              "example": "About Us"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInfoSectionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/info-sections/{id}": {
      "put": {
        "tags": [
          "Informative  Sections"
        ],
        "summary": "Update informative section",
        "description": "Update informative section",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the informative section to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoSectionUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoSectionUpdateResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Informative  Sections"
        ],
        "summary": "Get informative section by id",
        "description": "Get informative section by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the informative section to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoSectionSingleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/info-sections/{id}/status": {
      "patch": {
        "tags": [
          "Informative  Sections"
        ],
        "summary": "Enable/Disable informative section",
        "description": "Enable/Disable informative section",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The unique identifier for the informative section to fetch",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoSectionUpdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/info-sections/options": {
      "get": {
        "tags": [
          "Informative  Sections"
        ],
        "summary": "Get informative sections options with pagination",
        "description": "Get informative sections options with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The page number to retrieve",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "itemsPerPage",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The number of items per page",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "description": "A search query to filter informative section by name or symbol",
              "example": "About Us"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "The order in which to sort the results (ascending or descending)",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field by which to sort the results",
              "example": "created_at"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoSectionOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tags/branch-tags/{branchId}": {
      "get": {
        "tags": [
          "Tags [User API]"
        ],
        "summary": "Get tags by branch id",
        "description": "Retrieve tags for a specific branch id.",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "description": "The ID of the branch.",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user tags.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListTagInfoResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/shop-homepage/{branchId}": {
      "get": {
        "tags": [
          "Homepage [User API]"
        ],
        "summary": "Get homepage content sections",
        "description": "Returns all content sections for the homepage including offers, categories, and promotions",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomepageContentResponse"
                },
                "example": {
                  "items": [
                    {
                      "type": "category_offer",
                      "data": {
                        "id": 1,
                        "backgroundColor": "#FF5733",
                        "categories": [
                          {
                            "id": 123,
                            "backgroundColor": "#FF5733",
                            "categories": [
                              {
                                "id": 1,
                                "name": "Electronics",
                                "description": "Latest gadgets and devices",
                                "discount": 15.5,
                                "image": "https://example.com/images/electronics.jpg"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "totalItems": 10,
                  "totalPages": 1,
                  "pageNumber": 1,
                  "itemsPerPage": 10
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/categories/user/{branchId}": {
      "get": {
        "tags": [
          "Categories [User API]"
        ],
        "summary": "Get categories paginated response by branch id",
        "description": "Retrieve categories paginated response for a specific branch id.",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "description": "The ID of the branch.",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user tags.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPaginatedResponse"
                  }
                }
              }
            }
          }
        }
      }

    },
    "/products/{id}/user": {
      "get": {
        "tags": [
          "Product [User API]"
        ],
        "summary": "Get Product by id",
        "description": "Get Product by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "The product id",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProduct"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {}
              },
              "itemsPerPage": {
                "type": "integer",
                "description": "The number of items per page",
                "example": 10
              },
              "pageNumber": {
                "type": "integer",
                "description": "The current page number",
                "example": 1
              },
              "totalItems": {
                "type": "integer",
                "description": "The total number of items available",
                "example": 50
              },
              "totalPages": {
                "type": "integer",
                "description": "The total number of pages available",
                "example": 5
              }
            }
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "status": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Success"
          }
        }
      },
      "PromotionTypesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "brand",
                "category",
                "product",
                "product_tag",
                "category_offer",
                "product_offer",
                "category_tag"
              ]
            }
          }
        }
      },
      "UploadRequest": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary"
          },
          "ratio": {
            "type": "string",
            "example": "1:4"
          }
        }
      },
      "MultipleUploadRequest": {
        "type": "object",
        "properties": {
          "items[0][image]": {
            "type": "string",
            "format": "binary"
          },
          "items[0][ratio]": {
            "type": "string",
            "example": "1:4"
          },
          "items[1][image]": {
            "type": "string",
            "format": "binary"
          },
          "items[1][ratio]": {
            "type": "string",
            "example": "1:4"
          },
          "items[2][image]": {
            "type": "string",
            "format": "binary"
          },
          "items[2][ratio]": {
            "type": "string",
            "example": "1:4"
          }
        }
      },
      "UploadResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "03ace45c-c941-4e6d-b1c8-1de657df822f"
                  },
                  "url": {
                    "type": "string",
                    "example": "product-service-dev/ffd1-4mb.jpg"
                  },
                  "ratio": {
                    "type": "string",
                    "description": "ratio of the uploaded file",
                    "example": "1:1"
                  }
                }
              }
            }
          }
        ]
      },
      "MultipleUploadResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "description": "List of uploaded files with their details",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the uploaded file",
                      "example": "03ace45c-c941-4e6d-b1c8-1de657df822f"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the uploaded file",
                      "example": "product-service-dev/ffd1-4mb.jpg"
                    },
                    "ratio": {
                      "type": "string",
                      "description": "ratio of the uploaded file",
                      "example": "1:1"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "InfoSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "About Us"
          },
          "position": {
            "type": "string",
            "example": "detail"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-27T10:00:00Z"
          },
          "createdBy": {
            "type": "integer",
            "example": 123
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-27T12:00:00Z"
          },
          "updatedBy": {
            "type": "integer",
            "example": 456
          }
        }
      },
      "InfoSectionOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Updated About Us"
          }
        }
      },
      "AttributeOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Updated About Us"
          },
          "defaultStyle": {
            "type": "string",
            "example": "text"
          }
        }
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the newly created attribute",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the created attribute",
            "example": "Color"
          },
          "defaultStyle": {
            "type": "string",
            "description": "default style of the created attribute",
            "example": "sample style"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of Attribute (active/inactive)",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the attribute was created",
            "example": "2024-12-10T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the attribute was last updated",
            "example": "2024-12-11T15:30:00Z"
          },
          "createdBy": {
            "type": "integer",
            "description": "ID of the user who created the attribute",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "description": "ID of the user who last updated the attribute",
            "example": 1
          },
          "attributeValues": {
            "type": "array",
            "description": "array of the attribute values",
            "items": {
              "$ref": "#/components/schemas/AttributeValue"
            }
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the tag",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the tag",
            "example": "Tag 1"
          },
          "icon": {
            "type": "string",
            "description": "Icon of the tag",
            "example": "icon1.jpg"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of tag (active/inactive)",
            "example": true
          },
          "isVertical": {
            "type": "boolean",
            "description": "type of tag ",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the tag was created",
            "example": "2024-12-10T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the tag was last updated",
            "example": "2024-12-11T15:30:00Z"
          },
          "createdBy": {
            "type": "integer",
            "description": "ID of the user who created the tag",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "description": "ID of the user who last updated the tag",
            "example": 1
          }
        }
      },
      "Promise": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the promise",
            "example": 1
          },
          "shortTitle": {
            "type": "string",
            "description": "Short title of the promise",
            "example": "Fast Shipping"
          },
          "shortDescription": {
            "type": "string",
            "description": "Brief description of the promise",
            "example": "We ship in 24 hrs"
          },
          "longTitle": {
            "type": "string",
            "description": "Detailed title of the promise",
            "example": "Lightning Fast Delivery"
          },
          "longDescription": {
            "type": "string",
            "description": "Full description of the promise",
            "example": "Orders placed before 2 PM ship same day with guaranteed next-day delivery"
          },
          "image": {
            "type": "string",
            "description": "Image associated with the promise",
            "example": "promise_image.jpg"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of promise (active/inactive)",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the promise was created",
            "example": "2024-12-10T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the promise was last updated",
            "example": "2024-12-11T15:30:00Z"
          },
          "createdBy": {
            "type": "integer",
            "description": "ID of the user who created the promise",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "description": "ID of the user who last updated the promise",
            "example": 1
          }
        }
      },
      "ProductOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the product",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the product( Product name (Branch name))",
            "example": "Onion (Foodi Mart Baridhara)"
          }
        }
      },
      "Files": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the uploaded file",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "mimetype": {
            "type": "string",
            "description": "MIME type of the file (e.g., image/png, application/pdf)",
            "example": "image/png"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the uploaded file",
            "example": "product-service-dev/b381-bird.jpeg"
          },
          "ratio": {
            "type": "string",
            "description": "Aspect ratio of the file (if applicable)",
            "example": "16:9"
          },
          "fileSize": {
            "type": "integer",
            "format": "int32",
            "description": "Size of the file in bytes",
            "example": 204800
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the file was uploaded",
            "example": "2024-02-06T12:34:56Z"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32",
            "description": "User ID of the uploader",
            "example": 1
          }
        }
      },
      "TagOptions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the tag",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the tag",
            "example": "Tag 1"
          }
        }
      },
      "AttributeValueOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the tag",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the tag",
            "example": "Small (SM)"
          }
        }
      },
      "CategoryOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the category",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the category",
            "example": "Tag 1"
          }
        }
      },
      "BrandOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the Brand",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the Brand",
            "example": "Lotto"
          }
        }
      },
      "UOMOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the Brand",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the Brand",
            "example": "kilogram"
          }
        }
      },
      "AttributeValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the newly created attribute value",
            "example": 1
          },
          "attributeId": {
            "type": "integer",
            "description": "ID of the attribute",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the created attribute value",
            "example": "Red"
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute value",
            "example": "sample value"
          },
          "description": {
            "type": "string",
            "description": "The description of the attribute value",
            "example": "sample attr value"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the attribute value was created",
            "example": "2024-12-10T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the attribute value was last updated",
            "example": "2024-12-11T15:30:00Z"
          },
          "createdBy": {
            "type": "integer",
            "description": "ID of the user who created the attribute value",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "description": "ID of the user who last updated the attribute value",
            "example": 1
          }
        }
      },
      "HomepageContentResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/CategoryOfferSection" },
                { "$ref": "#/components/schemas/TitlelessBannerOfferSection" },
                { "$ref": "#/components/schemas/CategoriesSection" },
                { "$ref": "#/components/schemas/BestSellersSection" },
                { "$ref": "#/components/schemas/TitledBannerOfferSection" },
                { "$ref": "#/components/schemas/SideScrolledProductOfferSection" },
                { "$ref": "#/components/schemas/NewInStoreOfferSection" },
                { "$ref": "#/components/schemas/CategorySection" },
                { "$ref": "#/components/schemas/ProductOfferSection" },
                { "$ref": "#/components/schemas/BrandPromotionSection" }
              ]
            }
          },
          "totalItems": {
            "type": "integer",
            "example": 10
          },
          "totalPages": {
            "type": "integer",
            "example": 1
          },
          "pageNumber": {
            "type": "integer",
            "example": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "CategoryOfferSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["category_offer"]
          },
          "data": {
            "$ref": "#/components/schemas/CategoryOfferData"
          }
        }
      },
      "CategoryOfferData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "backgroundColor": {
            "type": "string",
            "example": "#FF5733"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NestedCategory"
            }
          }
        }
      },
      "NestedCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 123
          },
          "backgroundColor": {
            "type": "string",
            "example": "#FF5733"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryItem"
            }
          }
        }
      },
      "CategoryItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "example": "Latest gadgets and devices"
          },
          "discount": {
            "type": "number",
            "format": "float",
            "example": 15.5
          },
          "image": {
            "type": "string",
            "example": "https://example.com/images/electronics.jpg"
          }
        }
      },
      "TitlelessBannerOfferSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["titleless_banner_offer"]
          },
          "data": {
            "$ref": "#/components/schemas/TitlelessBannerOfferData"
          }
        }
      },
      "TitlelessBannerOfferData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 456
          },
          "backgroundColor": {
            "type": "string",
            "example": "#4A90E2"
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionItem"
            }
          }
        }
      },
      "PromotionItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 101
          },
          "bannerImage": {
            "type": "string",
            "example": "https://example.com/banners/summer-sale.jpg"
          },
          "promotionType": {
            "type": "string",
            "example": "seasonal"
          }
        }
      },
      "CategoriesSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["categories"]
          },
          "data": {
            "$ref": "#/components/schemas/CategoriesData"
          }
        }
      },
      "CategoriesData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "backgroundColor": {
            "type": "string",
            "example": "#F0F8FF"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasicCategoryItem"
            }
          }
        }
      },
      "BasicCategoryItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 301
          },
          "name": {
            "type": "string",
            "example": "Sports"
          },
          "image": {
            "type": "string",
            "example": "https://example.com/images/sports.jpg"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#E6F9FF"
          }
        }
      },
      "BestSellersSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["bestsellers"]
          },
          "data": {
            "$ref": "#/components/schemas/BestSellersData"
          }
        }
      },
      "BestSellersData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 789
          },
          "name": {
            "type": "string",
            "example": "Summer Best Sellers"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#FF6B6B"
          },
          "textColor": {
            "type": "string",
            "example": "#FFFFFF"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BestSellerCategory"
            }
          }
        }
      },
      "BestSellerCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 101
          },
          "name": {
            "type": "string",
            "example": "Beach Essentials"
          },
          "image1": {
            "type": "string",
            "example": "https://example.com/images/beach1.jpg"
          },
          "image2": {
            "type": "string",
            "example": "https://example.com/images/beach2.jpg"
          },
          "image3": {
            "type": "string",
            "example": "https://example.com/images/beach3.jpg"
          },
          "image4": {
            "type": "string",
            "example": "https://example.com/images/beach4.jpg"
          }
        }
      },
      "TitledBannerOfferSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["titled_banner_offer"]
          },
          "data": {
            "$ref": "#/components/schemas/TitledBannerOfferData"
          }
        }
      },
      "TitledBannerOfferData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1001
          },
          "name": {
            "type": "string",
            "example": "Seasonal Specials"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#3A86FF"
          },
          "textColor": {
            "type": "string",
            "example": "#FFFFFF"
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionItem"
            }
          }
        }
      },
      "SideScrolledProductOfferSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["side_scrolled_product_offer"]
          },
          "data": {
            "$ref": "#/components/schemas/ProductOfferData"
          }
        }
      },
      "NewInStoreOfferSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["new_in_store_offer"]
          },
          "data": {
            "$ref": "#/components/schemas/NewInStoreOfferData"
          }
        }
      },
      "NewInStoreOfferData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 3001
          },
          "name": {
            "type": "string",
            "example": "New Arrivals"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#FFEEF6"
          },
          "textColor": {
            "type": "string",
            "example": "#D6336C"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewInStoreCategory"
            }
          }
        }
      },
      "NewInStoreCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 101
          },
          "name": {
            "type": "string",
            "example": "Summer Collection"
          },
          "image": {
            "type": "string",
            "example": "https://example.com/images/summer-collection-square.jpg"
          },
          "wideImage": {
            "type": "string",
            "example": "https://example.com/images/summer-collection-wide.jpg"
          },
          "discount": {
            "type": "number",
            "format": "float",
            "example": 15.0
          }
        }
      },
      "CategorySection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["category"]
          },
          "data": {
            "$ref": "#/components/schemas/CategoryData"
          }
        }
      },
      "CategoryData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 4001
          },
          "name": {
            "type": "string",
            "example": "Shop by Category"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#FFFFFF"
          },
          "textColor": {
            "type": "string",
            "example": "#333333"
          },
          "style": {
            "type": "string",
            "example": "grid"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasicCategoryItem"
            }
          }
        }
      },
      "ProductOfferSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["product_offer"]
          },
          "data": {
            "$ref": "#/components/schemas/ProductOfferData"
          }
        }
      },
      "ProductOfferData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2001
          },
          "name": {
            "type": "string",
            "example": "Trending Now"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#FFFFFF"
          },
          "textColor": {
            "type": "string",
            "example": "#333333"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductItem"
            }
          }
        }
      },
      "ProductItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 101
          },
          "name": {
            "type": "string",
            "example": "Coca-Cola 1L"
          },
          "sku": {
            "type": "string",
            "example": "COCO-1L"
          },
          "image": {
            "type": "string",
            "example": "https://cdn.foodi.com/products/coca1l.png"
          },
          "uomStr": {
            "type": "string",
            "example": "1L"
          },
          "basePrice": {
            "type": "string",
            "example": "100"
          },
          "discount": {
            "type": "string",
            "example": "10"
          },
          "maxQtyPerOrder": {
            "type": "integer",
            "example": 10
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": true
          },
          "discountedPrice": {
            "type": "string",
            "example": "90"
          },
          "variationCount": {
            "type": "integer",
            "example": 1
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProductVariation"
            }
          }
        }
      },
      "UserProductVariation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 201
          },
          "name": {
            "type": "string",
            "example": "Bottle"
          },
          "sku": {
            "type": "string",
            "example": "COCO-BOTTLE"
          },
          "image": {
            "type": "string",
            "example": "https://cdn.foodi.com/variations/bottle.png"
          },
          "basePrice": {
            "type": "string",
            "example": "100"
          },
          "discount": {
            "type": "string",
            "example": "10"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": true
          },
          "discountedPrice": {
            "type": "string",
            "example": "90"
          },
          "maxQtyPerOrder": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "BrandPromotionSection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["brand_promotion"]
          },
          "data": {
            "$ref": "#/components/schemas/BrandPromotionData"
          }
        }
      },
      "BrandPromotionData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5002
          },
          "name": {
            "type": "string",
            "example": "Luxury Brands"
          },
          "backgroundColor": {
            "type": "string",
            "example": "#000000"
          },
          "textColor": {
            "type": "string",
            "example": "#FFFFFF"
          },
          "brands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandItem"
            }
          }
        }
      },
      "BrandItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 201
          },
          "name": {
            "type": "string",
            "example": "Gucci"
          },
          "logo": {
            "type": "string",
            "example": "https://example.com/logos/gucci.png"
          }
        }
      },
      "UOM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the newly created UOM",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the created UOM",
            "example": "Kilogram"
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "description": "Symbol representing the unit of measurement",
            "example": "kg"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of UOM (active/inactive)",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the Brand was created",
            "example": "2024-12-10T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the Brand was last updated",
            "example": "2024-12-11T15:30:00Z"
          },
          "createdBy": {
            "type": "integer",
            "description": "ID of the user who created the UOM",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "description": "ID of the user who last updated the UOM",
            "example": 1
          }
        }
      },
      "PromiseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Promise"
              }
            }
          }
        ]
      },
      "ListPromiseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Promise"
                }
              }
            }
          }
        ]
      },
      "CategoryPaginatedResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "Data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CategoryPaginated"
                    }
                  },
                  "itemsPerPage": {
                    "type": "integer",
                    "example": 3
                  },
                  "pageNumber": {
                    "type": "integer",
                    "example": 1
                  },
                  "totalItems": {
                    "type": "integer",
                    "example": 20
                  },
                  "totalPages": {
                    "type": "integer",
                    "example": 7
                  }
                }
              }
            }
          }
        ]
      },
      "CategoryPaginated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "example": "Electronics description goes here"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/images/electronics.jpg"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryPaginated"
            },
            "example": [
              {
                "id": 101,
                "name": "Electronics Subcategory 1",
                "description": "Latest electronics subcategory 1",
                "image": "https://example.com/images/electronics-sub1.jpg",
                "children": [],
                "discount": 10.5,
                "tagIds": [1, 2],
                "backgroundColor": "#f0f0f0",
                "textColor": "#333333",
                "style": "default"
              }
            ]
          },
          "discount": {
            "type": "number",
            "format": "float",
            "example": 10.5
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "backgroundColor": {
            "type": "string",
            "example": "#f0f0f0"
          },
          "textColor": {
            "type": "string",
            "example": "#333333"
          },
          "style": {
            "type": "string",
            "example": "default"
          }
        }

      },
      "ListTagInfoResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TagInfo"
                }
              }
            }
          }
        ]
      },
      "TagInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id of tag",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "name of tag",
            "example": "vegetable"
          },
          "icon": {
            "type": "string",
            "description": "icon of tag",
            "example": "/product-shabrul/688b-2560x1440-blue-solid-color-background.jpg"
          }
        }
      },
      "PromiseBatchReq": {
        "type": "object",
        "required": [
          "promises"
        ],
        "properties": {
          "promises": {
            "type": "array",
            "description": "List of promises to process",
            "minItems": 1,
            "maxItems": 1000,
            "items": {
              "$ref": "#/components/schemas/PromiseReq"
            },
            "example": [
              {
                "shortTitle": "Fast Support",
                "shortDescription": "24/7 customer service",
                "imageId": "a1b2c3d4-5678-90ef-ghij-klmnopqrstuv",
                "isActive": true
              },
              {
                "shortTitle": "Easy Returns",
                "shortDescription": "30-day return policy",
                "imageId": "b2c3d4e5-6789-01fg-hijk-lmnopqrstuvw"
              }
            ]
          }
        }
      },
      "PromiseIsActiveParams": {
        "type": "object",
        "required": [
          "isActive",
          "updatedBy"
        ],
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "New activation status for the promise",
            "example": true
          }
        },
        "example": {
          "isActive": false
        }
      },
      "PromiseReq": {
        "type": "object",
        "required": [
          "shortTitle",
          "shortDescription",
          "imageId"
        ],
        "properties": {
          "shortTitle": {
            "type": "string",
            "description": "Short title of the promise (required)",
            "example": "Fast Shipping"
          },
          "shortDescription": {
            "type": "string",
            "description": "Brief description of the promise (required)",
            "example": "We ship in 24 hrs"
          },
          "longTitle": {
            "type": "string",
            "description": "Detailed title of the promise",
            "example": "Lightning Fast Delivery"
          },
          "longDescription": {
            "type": "string",
            "description": "Full description of the promise",
            "example": "Orders placed before 2 PM ship same day"
          },
          "imageId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the associated image (required)",
            "example": "f153c7db-3818-4ded-a6ff-e10ce5cada98"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of the promise",
            "example": true,
            "default": false
          }
        }
      },
      "PromiseUpdateReq": {
        "type": "object",
        "required": [
          "shortTitle",
          "shortDescription",
          "imageId"
        ],
        "properties": {
          "shortTitle": {
            "type": "string",
            "description": "Concise title of the promise (50 chars max)",
            "example": "Fast Delivery"
          },
          "shortDescription": {
            "type": "string",
            "description": "Brief summary of the promise (100 chars max)",
            "example": "24-hour shipping"
          },
          "longTitle": {
            "type": "string",
            "description": "Detailed title of the promise (optional, 100 chars max)",
            "example": "Guaranteed Next-Day Delivery Service",
            "x-oas-optional": true
          },
          "longDescription": {
            "type": "string",
            "description": "Full promise details (optional, 500 chars max)",
            "example": "All orders placed before 2PM EST ship same business day with tracking"
          },
          "imageId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated image identifier (UUIDv4 format)",
            "example": "f153c7db-3818-4ded-a6ff-e10ce5cada98"
          },
          "isActive": {
            "type": "boolean",
            "description": "Activation status of the promise",
            "example": true,
            "default": false
          }
        }
      },
      "PromiseOptions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the promise",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Concatation of short title and short description",
            "example": "Tag 1"
          }
        }
      },
      "PaginatedPromiseOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PromiseOptions"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedPromiseResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Promise"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ProductOptionsResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductOption"
                },
                "description": "List of products for the current page"
              },
              "itemsPerPage": {
                "type": "integer",
                "description": "The number of items per page",
                "example": 10
              },
              "pageNumber": {
                "type": "integer",
                "description": "The current page number",
                "example": 1
              },
              "totalItems": {
                "type": "integer",
                "description": "The total number of products available",
                "example": 50
              },
              "totalPages": {
                "type": "integer",
                "description": "The total number of pages available",
                "example": 5
              }
            }
          }
        ]
      },
      "Brand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the newly created Brand",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the created Brand",
            "example": "Apex"
          },
          "logo": {
            "type": "string",
            "description": "logo url",
            "example": "product-service-dev/1232-logo.png"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of UOM (active/inactive)",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the Brand was created",
            "example": "2024-12-10T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the Brand was last updated",
            "example": "2024-12-11T15:30:00Z"
          },
          "createdBy": {
            "type": "integer",
            "description": "ID of the user who created the UOM",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "description": "ID of the user who last updated the UOM",
            "example": 1
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the category",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the category",
            "example": "Abir Hasan"
          },
          "description": {
            "type": "string",
            "description": "Description of the category",
            "example": "Category Description"
          },
          "image1": {
            "type": "string",
            "description": "The imageId is category",
            "example": "product-service-dev/a280-bird.jpeg",
            "maxLength": 5
          },
          "image2": {
            "type": "string",
            "description": "The imageId is category",
            "example": "product-service-dev/a280-bird.jpeg"
          },
          "image3": {
            "type": "string",
            "description": "The imageId is category",
            "example": "product-service-dev/a280-bird.jpeg"
          },
          "image4": {
            "type": "string",
            "description": "The imageId is category",
            "example": "product-service-dev/a280-bird.jpeg"
          },
          "wideImage": {
            "type": "string",
            "description": "The imageId is category",
            "example": "product-service-dev/a280-bird.jpeg"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2
            ]
          },
          "discount": {
            "type": "number",
            "description": "discount of category",
            "example": 3.4
          },
          "backgroundColor": {
            "type": "string",
            "description": "background color of category",
            "example": "#ff5733"
          },
          "textColor": {
            "type": "string",
            "description": "text color of category",
            "example": "#ff5733"
          },
          "style": {
            "type": "string",
            "description": "style color of category",
            "example": "default"
          },
          "parentId": {
            "type": "integer",
            "description": "ID of the parent category",
            "example": 1
          },
          "children": {
            "type": "array",
            "description": "IDs of child categories",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "shopId": {
            "type": "integer",
            "description": "ID of the shop category",
            "example": 1
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the category is active",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the category was created",
            "example": "2024-12-17T13:04:40.428624Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the category was last updated",
            "example": "2024-12-18T06:40:38.84201Z"
          },
          "createdBy": {
            "type": "integer",
            "description": "ID of the user who created the category",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "description": "ID of the user who last updated the category",
            "example": 1
          }
        }
      },
      "CreateInfoSectionRequest": {
        "type": "object",
        "properties": {
          "infoSections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "About Us"
                },
                "position": {
                  "type": "string",
                  "example": "detail"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "InfoSectionUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated About Us"
          },
          "position": {
            "type": "string",
            "example": "drawer"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "InfoSectionUpdateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Info section updated successfully"
          },
          "data": {
            "$ref": "#/components/schemas/InfoSection"
          }
        }
      },
      "InfoSectionSingleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/InfoSection"
          }
        }
      },
      "InfoSectionOptionsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InfoSectionOption"
            }
          }
        }
      },
      "InfoSectionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Info sections created successfully"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InfoSection"
            }
          }
        }
      },
      "UOMRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the unit of measurement",
            "example": "Kilogram"
          },
          "symbol": {
            "type": "string",
            "description": "A short symbol representing the unit of measurement (max 5 characters)",
            "example": "kg",
            "maxLength": 5
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the unit of measurement is active",
            "example": true
          }
        },
        "required": [
          "name",
          "symbol"
        ]
      },
      "AttributeCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute",
            "example": "Color"
          },
          "defaultStyle": {
            "type": "string",
            "description": "The default style of the attribute",
            "example": "style"
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the attribute is active",
            "example": true
          },
          "attributeValues": {
            "type": "array",
            "description": "array of the attribute values",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the attribute value",
                  "example": "Red"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the attribute value",
                  "example": "sample value"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the attribute value",
                  "example": "sample attr value"
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "AttributeUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute",
            "example": "Color"
          },
          "defaultStyle": {
            "type": "string",
            "description": "The default style of the attribute",
            "example": "style"
          },
          "attributeValues": {
            "type": "array",
            "description": "array of the attribute values",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The ID attribute value",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "description": "The name of the attribute value",
                  "example": "Red"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the attribute value",
                  "example": "sample value"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the attribute value",
                  "example": "sample attr value"
                }
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "AttributeResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          }
        ]
      },
      "UOMResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/UOM"
              }
            }
          }
        ]
      },
      "IsActiveRequest": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the unit of measurement is active",
            "example": true
          }
        },
        "required": [
          "isActive"
        ]
      },
      "PaginatedUOMResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UOM"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "UserProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Pyaz (Onion)"
          },
          "sku": {
            "type": "string",
            "example": "XDTSM8-PYA"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "/stage-product/ae3f-red-onion-1-1.png",
              "/stage-product/96f1-red-onion-close-1-1-removebg-preview.png"
            ]
          },
          "brand": {
            "$ref": "#/components/schemas/UserBrand"
          },
          "_uomStr": {
            "type": "string",
            "example": "Weight based, simple"
          },
          "uomStr": {
            "type": "string",
            "example": "1kg"
          },
          "basePrice": {
            "type": "string",
            "example": "60"
          },
          "discount": {
            "type": "string",
            "example": "5"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "55"
          },
          "promises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPromise"
            }
          },
          "_aboutUs": {
            "type": "string",
            "example": "aboutUs section"
          },
          "aboutUs": {
            "$ref": "#/components/schemas/UserAboutUs"
          },
          "defaultVariationKey": {
            "type": "string",
            "example": "1_4_7"
          },
          "variationAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserVariationAttribute"
            }
          },
          "variations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UserVariation"
            }
          },
          "maxQtyPerOrder": {
            "type": "integer",
            "example": 20
          }
        }
      },
      "UserBrand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mart (Gulshan)"
          }
        }
      },
      "UserPromise": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "shortTitle": {
            "type": "string",
            "example": "Fast Shipping"
          },
          "shortDescription": {
            "type": "string",
            "example": "We ship in 24 hrs"
          },
          "longTitle": {
            "type": "string",
            "example": "Lightning Fast Delivery"
          },
          "longDescription": {
            "type": "string",
            "example": "Orders placed before 2 PM ship same day with guaranteed next-day delivery"
          },
          "image": {
            "type": "string",
            "example": "/stage-product/8a9b-fast-shippinh-1-1-removebg-preview.png"
          }
        }
      },
      "UserAboutUs": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "About Us"
          },
          "position": {
            "type": "string",
            "example": "detail"
          },
          "_attributes": {
            "type": "string",
            "example": "other attributes"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAttribute"
            }
          }
        }
      },
      "UserAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Origin"
          },
          "value": {
            "type": "string",
            "example": "Bangladesh"
          }
        }
      },
      "UserVariationAttribute": {
        "type": "object",
        "properties": {
          "attrId": {
            "type": "integer",
            "example": 1
          },
          "attrName": {
            "type": "string",
            "example": "type"
          },
          "attrValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAttributeValue"
            }
          }
        }
      },
      "UserAttributeValue": {
        "type": "object",
        "properties": {
          "attrValueId": {
            "type": "integer",
            "example": 1
          },
          "attrValueName": {
            "type": "string",
            "example": "Local"
          },
          "attrValue": {
            "type": "string",
            "example": "local"
          },
          "description": {
            "type": "string",
            "example": "Bangladeshi local onion"
          }
        }
      },
      "UserVariation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 101
          },
          "sku": {
            "type": "string",
            "example": "XDTSM8-PYA-001"
          },
          "image": {
            "type": "string",
            "example": "/stage-product/ad1d-local-small-loose-1-1-removebg-preview.png"
          },
          "basePrice": {
            "type": "string",
            "example": "60"
          },
          "discount": {
            "type": "string",
            "example": "5"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "55"
          },
          "uomStr": {
            "type": "string",
            "example": "1kg"
          },
          "maxQtyPerOrder": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "PaginatedAttributesResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Attribute"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedAttributeOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AttributeOption"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedCategoryOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CategoryOption"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedTagsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedTagsOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TagOptions"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedAttributeValueOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AttributeValueOption"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedInfoSectionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/InfoSection"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedFilesOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Files"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "BrandRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the brand",
            "example": "Apex"
          },
          "logoId": {
            "type": "string",
            "description": "The logoId is UUId",
            "example": "c3a361dd-110a-4604-a143-5e2074b83201",
            "maxLength": 5
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the unit of measurement is active",
            "example": true
          }
        },
        "required": [
          "name"
        ]
      },
      "BrandResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Brand"
              }
            }
          }
        ]
      },
      "ListTagResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        ]
      },
      "PaginatedUOMOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UOMOption"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedBrandOptionsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BrandOption"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PaginatedBrandResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Brand"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "SingleCategoryUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category",
            "example": "Food"
          },
          "description": {
            "type": "string",
            "description": "The description of the category",
            "example": "Food"
          },
          "imageId1": {
            "type": "string",
            "description": "The imageId is category",
            "example": "c3a361dd-110a-4604-a143-5e2074b83201"
          },
          "imageId2": {
            "type": "string",
            "description": "The imageId is category",
            "example": "c3a361dd-110a-4604-a143-5e2074b83201"
          },
          "imageId3": {
            "type": "string",
            "description": "The imageId is category",
            "example": "c3a361dd-110a-4604-a143-5e2074b83201"
          },
          "imageId4": {
            "type": "string",
            "description": "The imageId is category",
            "example": "c3a361dd-110a-4604-a143-5e2074b83201"
          },
          "wideImageId": {
            "type": "string",
            "description": "The imageId is category",
            "example": "c3a361dd-110a-4604-a143-5e2074b83201"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2
            ]
          },
          "discount": {
            "type": "number",
            "description": "discount of category",
            "example": 3.4
          },
          "backgroundColor": {
            "type": "string",
            "description": "background color of category",
            "example": "#ff5733"
          },
          "textColor": {
            "type": "string",
            "description": "text color of category",
            "example": "#ff5733"
          },
          "style": {
            "type": "string",
            "description": "style color of category",
            "example": "default"
          }
        },
        "required": [
          "name"
        ]
      },
      "SingleCategoryUpdateResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        ]
      },
      "IsActiveCategoryResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        ]
      },
      "CreateCategoryRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 0
                },
                "name": {
                  "type": "string",
                  "example": "Food"
                },
                "description": {
                  "type": "string",
                  "example": "different type of foods"
                },
                "imageId1": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "c3a361dd-110a-4604-a143-5e2074b83201"
                },
                "imageId2": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "c3a361dd-110a-4604-a143-5e2074b83201"
                },
                "imageId3": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "c3a361dd-110a-4604-a143-5e2074b83201"
                },
                "imageId4": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "c3a361dd-110a-4604-a143-5e2074b83201"
                },
                "wideImageId": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "c3a361dd-110a-4604-a143-5e2074b83201"
                },
                "image1": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "product-service-dev/a280-bird.jpeg"
                },
                "image2": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "product-service-dev/a280-bird.jpeg"
                },
                "image3": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "product-service-dev/a280-bird.jpeg"
                },
                "image4": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "product-service-dev/a280-bird.jpeg"
                },
                "wideImage": {
                  "type": "string",
                  "description": "The imageId is category",
                  "example": "product-service-dev/a280-bird.jpeg"
                },
                "tagIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "example": [
                    1,
                    2
                  ]
                },
                "discount": {
                  "type": "number",
                  "description": "discount of category",
                  "example": 3.4
                },
                "backgroundColor": {
                  "type": "string",
                  "description": "background color of category",
                  "example": "#ff5733"
                },
                "textColor": {
                  "type": "string",
                  "description": "text color of category",
                  "example": "#ff5733"
                },
                "style": {
                  "type": "string",
                  "description": "style color of category",
                  "example": "default"
                },
                "parentId": {
                  "type": "integer",
                  "example": 0
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                },
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 0
                      },
                      "name": {
                        "type": "string",
                        "example": "Fresh Vegetables"
                      },
                      "description": {
                        "type": "string",
                        "example": "fresh vegetables"
                      },
                      "imageId": {
                        "type": "string",
                        "example": ""
                      },
                      "image": {
                        "type": "string",
                        "example": ""
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 0
                      },
                      "isActive": {
                        "type": "boolean",
                        "example": true
                      },
                      "children": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CategoryTree": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          }
        ]
      },
      "Tags": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "HasibTag"
          }
        }
      },
      "Categories": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5
          },
          "name": {
            "type": "string",
            "example": "Food"
          },
          "matchedTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Categories"
            }
          }
        }
      },
      "CategoryResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Food"
                    },
                    "description": {
                      "type": "string",
                      "example": ""
                    },
                    "image1": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image2": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image3": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image4": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "wideImage": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "parentId": {
                      "type": "integer",
                      "example": 0
                    },
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2
                          },
                          "name": {
                            "type": "string",
                            "example": "Fresh Vegetables"
                          },
                          "description": {
                            "type": "string",
                            "example": "fresh vegetables"
                          },
                          "image1": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "image2": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "image3": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "image4": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "wideImage": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "parentId": {
                            "type": "integer",
                            "example": 1
                          },
                          "children": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": []
                          },
                          "isActive": {
                            "type": "boolean",
                            "example": true
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the category was created",
                            "example": "2024-12-10T12:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the category was last updated",
                            "example": "2024-12-11T15:30:00Z"
                          },
                          "createdBy": {
                            "type": "integer",
                            "description": "ID of the user who created the category",
                            "example": 1
                          },
                          "updatedBy": {
                            "type": "integer",
                            "description": "ID of the user who last updated the category",
                            "example": 1
                          },
                          "shopId": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    },
                    "shopId": {
                      "type": "integer",
                      "example": 1
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the category was created",
                      "example": "2024-12-10T12:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the category was last updated",
                      "example": "2024-12-11T15:30:00Z"
                    },
                    "createdBy": {
                      "type": "integer",
                      "description": "ID of the user who created the category",
                      "example": 1
                    },
                    "updatedBy": {
                      "type": "integer",
                      "description": "ID of the user who last updated the category",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "CategoryUserResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Food"
                    },
                    "description": {
                      "type": "string",
                      "example": ""
                    },
                    "image1": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image2": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image3": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image4": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "wideImage": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "parentId": {
                      "type": "integer",
                      "example": 0
                    },
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2
                          },
                          "name": {
                            "type": "string",
                            "example": "Fresh Vegetables"
                          },
                          "description": {
                            "type": "string",
                            "example": "fresh vegetables"
                          },
                          "image1": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "image2": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "image3": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "image4": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "wideImage": {
                            "type": "string",
                            "description": "The imageId is category",
                            "example": "product-service-dev/a280-bird.jpeg"
                          },
                          "parentId": {
                            "type": "integer",
                            "example": 1
                          },
                          "children": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": []
                          },
                          "isActive": {
                            "type": "boolean",
                            "example": true
                          },
                          "shopId": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    },
                    "shopId": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "CategoryFlatResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Food"
                    },
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "tagIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "description": {
                      "type": "string",
                      "example": ""
                    },
                    "style": {
                      "type": "string",
                      "example": ""
                    },
                    "backgroundColor": {
                      "type": "string",
                      "example": ""
                    },
                    "textColor": {
                      "type": "string",
                      "example": ""
                    },
                    "discount": {
                      "type": "string",
                      "example": ""
                    },
                    "image1": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image2": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image3": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "image4": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "wideImage": {
                      "type": "string",
                      "description": "The imageId is category",
                      "example": "product-service-dev/a280-bird.jpeg"
                    },
                    "parentId": {
                      "type": "integer",
                      "example": 0
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    },
                    "shopId": {
                      "type": "integer",
                      "example": 1
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the category was created",
                      "example": "2024-12-10T12:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the category was last updated",
                      "example": "2024-12-11T15:30:00Z"
                    },
                    "createdBy": {
                      "type": "integer",
                      "description": "ID of the user who created the category",
                      "example": 1
                    },
                    "updatedBy": {
                      "type": "integer",
                      "description": "ID of the user who last updated the category",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "TagResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        ]
      },
      "TagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tag.",
            "example": "Electronics"
          },
          "iconId": {
            "type": "string",
            "description": "The ID of the icon associated with the tag.",
            "example": "15e227ef-3561-49b7-894a-d91463e3e175"
          },
          "weight": {
            "type": "integer",
            "description": "The weight of the tag used for prioritization.",
            "example": 10
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates if the tag is active.",
            "example": true
          },
          "isVertical": {
            "type": "boolean",
            "description": "Indicate if the tag is vertical.",
            "example": false
          }
        },
        "required": [
          "name",
          "weight"
        ]
      },
      "UpdateTagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tag.",
            "example": "Electronics"
          },
          "iconId": {
            "type": "string",
            "description": "The ID of the icon associated with the tag.",
            "example": "15e227ef-3561-49b7-894a-d91463e3e175"
          },
          "weight": {
            "type": "integer",
            "description": "The weight of the tag used for prioritization.",
            "example": 10
          },
          "isVertical": {
            "type": "boolean",
            "description": "Indicate if the tag is vertical.",
            "example": false
          }
        },
        "required": [
          "name",
          "weight"
        ]
      },
      "CreateTagRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagRequest"
            }
          }
        }
      },
      "ShopPromotion": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the promotion",
            "example": "50% Off"
          },
          "weight": {
            "type": "integer",
            "description": "The weight of the promotion",
            "example": 1
          },
          "style": {
            "type": "string",
            "description": "The style of the promotion (e.g., format, layout, etc.)",
            "example": ""
          },
          "backgroundColor": {
            "type": "string",
            "description": "The background color for the promotion (hex, rgb, or rgba format)",
            "example": "#FFFFFF"
          },
          "textColor": {
            "type": "string",
            "description": "The text color for the promotion (hex, rgb, or rgba format)",
            "example": "#FFFFFF"
          },
          "shopId": {
            "type": "integer",
            "description": "The ID of the shop",
            "example": 1
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "A list of category IDs associated with the promotion",
            "example": []
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "A list of tag IDs associated with the promotion",
            "example": []
          },
          "promotionIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of promotion IDs related to the promotion",
            "example": []
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the promotion is active",
            "example": true
          },
          "createdBy": {
            "type": "integer",
            "description": "The ID of the user who created the promotion",
            "example": 123
          },
          "updatedBy": {
            "type": "integer",
            "description": "The ID of the user who last updated the promotion",
            "example": 456
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the Brand was created",
            "example": "2024-12-10T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the Brand was last updated",
            "example": "2024-12-11T15:30:00Z"
          }
        }
      },
      "ShopPromotionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the promotion",
            "example": "50% Off"
          },
          "weight": {
            "type": "integer",
            "description": "The weight of the promotion",
            "example": 1
          },
          "style": {
            "type": "string",
            "description": "The type of promotion (e.g., discount, offer, etc.)",
            "example": "new_in_store"
          },
          "backgroundColor": {
            "type": "string",
            "description": "The background color for the promotion",
            "example": "#FFFFFF"
          },
          "textColor": {
            "type": "string",
            "description": "The text color for the promotion",
            "example": "#FFFFFF"
          },
          "bannerImgId": {
            "type": "string",
            "description": "The banner image id for the promotion",
            "example": "65d96759-406c-492a-adb3-b170b3180083"
          },
          "backgroundImgId": {
            "type": "string",
            "description": "The background image for the promotion",
            "example": "65d96759-406c-492a-adb3-b170b3180083"
          },
          "shopId": {
            "type": "integer",
            "description": "The ID of the shop",
            "example": 1
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of category IDs related to the promotion",
            "example": []
          },
          "branchIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of branch IDs related to the promotion",
            "example": []
          },
          "navigableTagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of tag IDs related to the promotion",
            "example": []
          },
          "visibleAfter": {
            "type": "object",
            "description": "The visible after is for time validity",
            "example": "2023-06-01T00:00:00Z"
          },
          "visibleUpto": {
            "type": "object",
            "description": "The visible up to is for time validity",
            "example": "2023-06-01T00:00:00Z"
          },
          "promotionType": {
            "type": "string",
            "description": "The type of the promotion",
            "example": "category"
          },
          "promotionIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of promotion IDs related to the promotion",
            "example": [1]
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of product IDs related to the promotion",
            "example": []
          },
          "productTagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of product tag IDs related to the promotion",
            "example": []
          },
          "categoryTagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of catefory tag IDs related to the promotion",
            "example": []
          },
          "brandIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The list of brand IDs related to the promotion",
            "example": []
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the promotion is active",
            "example": true
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopPromotionResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ShopPromotion"
              }
            }
          }
        ]
      },
      "PaginatedShopPromotionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ShopPromotion"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "TagOptionsResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TagOptions"
                }
              }
            }
          }
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mangoe"
          },
          "processingTimeInSec": {
            "type": "integer",
            "example": 120
          },
          "sku": {
            "type": "string",
            "example": "Y7YMG1-PROD"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "wideImages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "shopId": {
            "type": "integer",
            "example": 1
          },
          "branchId": {
            "type": "integer",
            "example": 1
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "branchIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3]
          },
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Branch"
            }
          },
          "groupId": {
            "type": "integer",
            "example": 1
          },
          "uomId": {
            "type": "integer",
            "example": 2
          },
          "weight": {
            "type": "integer",
            "example": 500
          },
          "basePrice": {
            "type": "string",
            "example": "300"
          },
          "discount": {
            "type": "string",
            "example": "50"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "250"
          },
          "sd": {
            "type": "string",
            "example": "10"
          },
          "commission": {
            "type": "string",
            "example": "10"
          },
          "isCommissionSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "vat": {
            "type": "string",
            "example": "5"
          },
          "isVatIncluded": {
            "type": "boolean",
            "example": true
          },
          "isVatSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "foodiBurn": {
            "type": "string",
            "example": "25"
          },
          "partnerBurn": {
            "type": "string",
            "example": "25"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTag"
            }
          },
          "isDelivery": {
            "type": "boolean",
            "example": true
          },
          "isPickup": {
            "type": "boolean",
            "example": true
          },
          "isPerishable": {
            "type": "boolean",
            "example": false
          },
          "allowInstruction": {
            "type": "boolean",
            "example": false
          },
          "sizeChartImage": {
            "type": "string",
            "example": "image1.jpg"
          },
          "promiseIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1]
          },
          "promises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPromise"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "sectionIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "attrIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1]
          },
          "attrValueIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [2]
          },
          "variationIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3]
          },
          "defaultVariationId": {
            "type": "integer",
            "example": 2
          },
          "variationAttrIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "variationAttrValueIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3, 4]
          },
          "variationAttrTrees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariationAttributeTree"
            }
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariation"
            }
          },
          "populatedAttributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PopulatedProductAttribute"
            }
          },
          "populatedAttributeValues": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProductAttributeValue"
            }
          },
          "populatedSectionDetails": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SectionDetail"
            }
          },
          "populatedSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PopulatedSection"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "createdBy": {
            "type": "integer",
            "example": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "updatedBy": {
            "type": "integer",
            "example": 2
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mart (Gulshan)"
          }
        }
      },
      "ProductStatusRequest": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Active status of the product",
            "example": false
          }
        }
      },
      "ProductStatusResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        ]
      },
      "ProductTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Tag 1"
          },
          "icon": {
            "type": "string",
            "example": "/dev-product/5e92-apex.png"
          }
        }
      },
      "ProductPromise": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "shortTitle": {
            "type": "string",
            "example": "Fast Shipping"
          },
          "shortDescription": {
            "type": "string",
            "example": "We ship in 24 hrs"
          },
          "longTitle": {
            "type": "string",
            "example": "Lightning Fast Shipping"
          },
          "longDescription": {
            "type": "string",
            "example": "Orders placed before 2 PM are shipped the same day."
          },
          "image": {
            "type": "string",
            "example": "promises/shipping.png"
          }
        }
      },
      "VariationAttributeTree": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "example": 1
          },
          "attributeValueIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "style": {
            "type": "string",
            "example": "text"
          }
        }
      },
      "ProductVariation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "sku": {
            "type": "string",
            "example": "Y7YMG1-PROD-0001"
          },
          "processingTimeInSec": {
            "type": "integer",
            "example": 120
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "wideImages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "attributeValueIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "productId": {
            "type": "integer",
            "example": 1
          },
          "weight": {
            "type": "integer",
            "example": 500
          },
          "isDefault": {
            "type": "boolean",
            "example": false
          },
          "basePrice": {
            "type": "string",
            "example": "300"
          },
          "discount": {
            "type": "string",
            "example": "50"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "250"
          },
          "sd": {
            "type": "string",
            "example": "10"
          },
          "commission": {
            "type": "string",
            "example": "10"
          },
          "isCommissionSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "vat": {
            "type": "string",
            "example": "5"
          },
          "isVatIncluded": {
            "type": "boolean",
            "example": true
          },
          "isVatSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "foodiBurn": {
            "type": "string",
            "example": "25"
          },
          "partnerBurn": {
            "type": "string",
            "example": "25"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "createdBy": {
            "type": "integer",
            "example": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "updatedBy": {
            "type": "integer",
            "example": 2
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "PopulatedProductAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Color"
          }
        }
      },
      "ProductAttributeValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "attributeId": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Red"
          },
          "value": {
            "type": "string",
            "example": "sample value"
          },
          "description": {
            "type": "string",
            "example": "sample attr value"
          }
        }
      },
      "SectionDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "About Us"
          }
        }
      },
      "PopulatedSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionAttribute"
            }
          }
        }
      },
      "SectionAttribute": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "integer",
            "example": 1
          },
          "attributeValueId": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "ProductCreateRequest": {
        "type": "object",
        "required": ["name", "branchIds", "shopId"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Mangoe"
          },
          "processingTimeInSec": {
            "type": "integer",
            "example": 120
          },
          "sku": {
            "type": "string",
            "example": "Y7YMG1-PROD"
          },
          "imageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "example": ["59216fe9-99b8-457f-9fa9-b300e73ce7e0"]
          },
          "wideImageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "example": ["92863f67-fe64-4846-9cb4-ed866994e379"]
          },
          "shopId": {
            "type": "integer",
            "example": 1
          },
          "branchIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3]
          },
          "uomId": {
            "type": "integer",
            "example": 2
          },
          "weight": {
            "type": "integer",
            "example": 500
          },
          "basePrice": {
            "type": "string",
            "example": "300"
          },
          "discount": {
            "type": "string",
            "example": "50"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "250"
          },
          "sd": {
            "type": "string",
            "example": "10"
          },
          "commission": {
            "type": "string",
            "example": "10"
          },
          "isCommissionSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "vat": {
            "type": "string",
            "example": "5"
          },
          "isVatIncluded": {
            "type": "boolean",
            "example": true
          },
          "isVatSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "foodiBurn": {
            "type": "string",
            "example": "25"
          },
          "partnerBurn": {
            "type": "string",
            "example": "25"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 4]
          },
          "isDelivery": {
            "type": "boolean",
            "example": true
          },
          "isPickup": {
            "type": "boolean",
            "example": true
          },
          "isPerishable": {
            "type": "boolean",
            "example": false
          },
          "allowInstruction": {
            "type": "boolean",
            "example": false
          },
          "sizeChartImageId": {
            "type": "string",
            "format": "uuid",
            "example": "07a221d1-0698-49ff-9408-1453f3fc845a"
          },
          "promiseIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "variationAttrTrees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariationAttributeTree"
            }
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariationCreate"
            }
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mangoe"
          },
          "processingTimeInSec": {
            "type": "integer",
            "example": 120
          },
          "sku": {
            "type": "string",
            "example": "Y7YMG1-PROD"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "wideImages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "shopId": {
            "type": "integer",
            "example": 1
          },
          "branchId": {
            "type": "integer",
            "example": 1
          },
          "groupId": {
            "type": "integer",
            "example": 1
          },
          "uomId": {
            "type": "integer",
            "example": 2
          },
          "weight": {
            "type": "integer",
            "example": 500
          },
          "basePrice": {
            "type": "string",
            "example": "300"
          },
          "discount": {
            "type": "string",
            "example": "50"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "250"
          },
          "sd": {
            "type": "string",
            "example": "10"
          },
          "commission": {
            "type": "string",
            "example": "10"
          },
          "isCommissionSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "vat": {
            "type": "string",
            "example": "5"
          },
          "isVatIncluded": {
            "type": "boolean",
            "example": true
          },
          "isVatSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "foodiBurn": {
            "type": "string",
            "example": "25"
          },
          "partnerBurn": {
            "type": "string",
            "example": "25"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 4]
          },
          "isDelivery": {
            "type": "boolean",
            "example": true
          },
          "isPickup": {
            "type": "boolean",
            "example": true
          },
          "isPerishable": {
            "type": "boolean",
            "example": false
          },
          "allowInstruction": {
            "type": "boolean",
            "example": false
          },
          "sizeChartImage": {
            "type": "string",
            "example": "image1.jpg"
          },
          "promiseIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "sectionIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "attrIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1]
          },
          "attrValueIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [2]
          },
          "variationIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3]
          },
          "defaultVariationId": {
            "type": "integer",
            "example": 2
          },
          "variationAttrIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "variationAttrValueIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3, 4]
          },
          "variationAttrTrees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariationAttributeTree"
            }
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariation"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "createdBy": {
            "type": "integer",
            "example": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "updatedBy": {
            "type": "integer",
            "example": 2
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ProductAttribute": {
        "type": "object",
        "properties": {
          "sectionId": {
            "type": "integer",
            "example": 1
          },
          "attributeId": {
            "type": "integer",
            "example": 1
          },
          "attributeValueId": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "ProductVariationCreate": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "example": "Y7YMG1-PROD-0001"
          },
          "processingTimeInSec": {
            "type": "integer",
            "example": 120
          },
          "imageIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wideImageIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attributeValueIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2]
          },
          "weight": {
            "type": "integer",
            "example": 500
          },
          "isDefault": {
            "type": "boolean",
            "example": false
          },
          "basePrice": {
            "type": "string",
            "example": "300"
          },
          "discount": {
            "type": "string",
            "example": "50"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "250"
          },
          "sd": {
            "type": "string",
            "example": "10"
          },
          "commission": {
            "type": "string",
            "example": "10"
          },
          "isCommissionSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "vat": {
            "type": "string",
            "example": "5"
          },
          "isVatIncluded": {
            "type": "boolean",
            "example": true
          },
          "isVatSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "foodiBurn": {
            "type": "string",
            "example": "25"
          },
          "partnerBurn": {
            "type": "string",
            "example": "25"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ProductVariationsResponse": {
        "type": "object",
        "properties": {
          "variationAttrTrees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariationAttributeTree"
            }
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariation"
            }
          },
          "populatedAttributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PopulatedProductAttribute"
            }
          },
          "populatedAttributeValues": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProductAttributeValue"
            }
          },
          "attrValueToAttrMap": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            },
            "example": {
              "1": 1,
              "2": 1,
              "3": 2,
              "4": 2
            }
          }
        }
      },
      "PaginatedProductOptionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductOptionItem"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "ProductOptionItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mangoe (Id: 1, Branch: 100)"
          }
        }
      },
      "PaginatedProductsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginatedResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductsResponse"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "GenerateSkuRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Product name to base the SKU generation on",
            "example": "mango"
          }
        }
      },
      "GenerateSkuResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "description": "Generated unique SKU code",
                "example": "I36JVC-COC"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "status": {
            "type": "boolean",
            "description": "Request status",
            "example": true
          }
        }
      },
      "ProductsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mangoe"
          },
          "processingTimeInSec": {
            "type": "integer",
            "example": 120
          },
          "sku": {
            "type": "string",
            "example": "Y7YMG1-PROD"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "wideImages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "shopId": {
            "type": "integer",
            "example": 1
          },
          "branchId": {
            "type": "integer",
            "example": 1
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "groupId": {
            "type": "integer",
            "example": 1
          },
          "basePrice": {
            "type": "string",
            "example": "300"
          },
          "discount": {
            "type": "string",
            "example": "50"
          },
          "isDiscountInPerc": {
            "type": "boolean",
            "example": false
          },
          "discountedPrice": {
            "type": "string",
            "example": "250"
          },
          "sd": {
            "type": "string",
            "example": "10"
          },
          "commission": {
            "type": "string",
            "example": "10"
          },
          "isCommissionSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "vat": {
            "type": "string",
            "example": "5"
          },
          "isVatIncluded": {
            "type": "boolean",
            "example": true
          },
          "isVatSameAsParent": {
            "type": "boolean",
            "example": false
          },
          "foodiBurn": {
            "type": "string",
            "example": "25"
          },
          "partnerBurn": {
            "type": "string",
            "example": "25"
          },
          "stockQuantity": {
            "type": "integer",
            "example": 100
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 4]
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTag"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategory"
            }
          },
          "isDelivery": {
            "type": "boolean",
            "example": true
          },
          "isPickup": {
            "type": "boolean",
            "example": true
          },
          "isPerishable": {
            "type": "boolean",
            "example": false
          },
          "allowInstruction": {
            "type": "boolean",
            "example": false
          },
          "variationCount": {
            "type": "integer",
            "example": 2
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "createdBy": {
            "type": "integer",
            "example": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-23T12:00:00Z"
          },
          "updatedBy": {
            "type": "integer",
            "example": 2
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "StockExistsRequest": {
        "type": "object",
        "required": ["skus", "branchIds"],
        "properties": {
          "skus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Y7YMG1-PROD",
              "Y7YMG1-PROD-0001",
              "Y7YMG1-PROD-0002"
            ]
          },
          "branchIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [1, 2, 3]
          }
        }
      },
      "StockExistsResponse": {
        "type": "object",
        "properties": {
          "stockExists": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "ProductCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Category 1"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}